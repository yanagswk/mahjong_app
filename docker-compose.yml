version: "3.8"

# Docker Volume (データを永続的に保存できるようにする仕組み)
volumes:
    mysql-volume:

services:
    app:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        volumes:
            - ./src/:/var/www/html
        # environment:
            # - DB_CONNECTION=mysql
            # - DB_HOST=db
            # - DB_PORT=3306
            # - DB_DATABASE=db_name
            # - DB_USERNAME=db_user
            # - DB_PASSWORD=db_password
            # - DB_TESTING_HOST=db-testing
            # - DB_TESTING_DATABASE=db_testing_name
            # - DB_TESTING_USERNAME=db_testing_user
            # - DB_TESTING_PASSWORD=db_testing_password

    web:
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        ports:
            - 80:80
            - 3000:3000
            - 3001:3001
        depends_on:     # コンテナ間の依存関係(先に起動するコンテナのサービス名) PHP->Nginxの順でコンテナを起動
            - app
        volumes:
            - ./src/:/var/www/html

    db:
        build:
            context: .
            dockerfile: ./docker/mysql/Dockerfile
        platform: linux/x86_64      # M1 mac用
        ports:
            - 3306:3306
        environment:
            MYSQL_DATABASE: db_name
            MYSQL_USER: db_user
            MYSQL_PASSWORD: db_password
            MYSQL_ROOT_PASSWORD: root
            TZ: "Asia/Tokyo"
        volumes:
            - mysql-volume:/var/lib/mysql

    db-testing:
        build:
            context: .
            dockerfile: ./docker/mysql/Dockerfile
        platform: linux/x86_64      # M1 mac用
        ports:
            - 3307:3306
        environment:
            MYSQL_DATABASE: db_testing_name
            MYSQL_USER: db_testing_user
            MYSQL_PASSWORD: db_testing_password
            MYSQL_ROOT_PASSWORD: root
            TZ: "Asia/Tokyo"
